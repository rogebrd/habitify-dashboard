{"version":3,"sources":["components/common/card.tsx","components/common/materialUITheme.ts","constants.ts","util/date.ts","data/axios.ts","components/widgets/habitify.tsx","App.js","reportWebVitals.js","index.js"],"names":["Card","className","children","Container","materialUITheme","createTheme","palette","primary","main","DAYS_SHORTHAND","MONTH_SHORTHAND","getUrlDate","date","getFullYear","getMonth","getDate","MS_PER_DAY","getWeekNumbersForWeeklyProgress","todayWeekNumber","DateTime","now","weekNumber","urlDates","i","push","reverse","getUrlIndexFromDay","day","client","axios","create","baseURL","timeout","headers","Authorization","localStorage","getItem","JSON","parse","HabitifyWidget","useState","dailyProgress","setDailyProgress","weeklyProgress","setWeeklyProgress","monthlyProgress","setMonthlyProgress","key","defaultValue","storedValue","val","_setVal","v","setItem","stringify","useLocalStorageState","token","setToken","failedRequest","setFailedRequest","today","Date","fetchDailyProgress","useCallback","dailyProgressHolder","Promise","allSettled","daysTilMonday","getDay","currentDate","valueOf","getUrlDatesForDailyProgress","map","get","getJournalUrl","then","responses","forEach","response","status","toString","value","parseResponse","requestUrl","request","responseURL","substring","catch","error","console","fetchWeeklyProgress","weeklyProgressHolder","getUrlDatesForWeeklyProgress","fetchMonthlyProgress","getUrlDateForMonthlyProgress","useEffect","interceptors","use","config","setAuthHeader","urlDate","fetch_type","data","message","dailyComplete","dailyGoal","habit","periodicity","goal","complete","Number","parseFloat","progress","current_value","target_value","ThemeProvider","theme","Input","onChange","change","target","index","toFixed","CircularProgress","variant","thickness","size","renderDay","LinearProgress","renderWeek","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3d09849.chunk.js","sourcesContent":["import { Container } from \"@material-ui/core\"\nimport { FunctionComponent } from \"react\"\n\ntype CardProps = {\n    className?: string;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({ className, children }) => {\n    return (\n        <Container className=\"card\">\n            <div className={`card--holder ${className ? className : ''}`}>\n                {children}\n            </div>\n        </Container>\n    )\n}","import { createTheme } from \"@material-ui/core/styles\";\n\nexport const materialUITheme = createTheme({\n  palette: {\n    primary: {\n      main: '#4527a0',\n    },\n  },\n});","export const DAYS_SHORTHAND = [\"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\", \"Sun\"];\nexport const MONTH_SHORTHAND = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"]","// @ts-ignore\nimport DateTime from 'luxon/src/datetime.js';\n\n// Get date url at 23:59:59 EST each day\nexport const getUrlDate = (date: Date) => {\n    return `${date.getFullYear()}-${date.getMonth() < 9 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1\n}-${date.getDate() < 9 ? '0' + (date.getDate() + 1) : date.getDate() + 1}T23%3A59%3A59%2B07%3A00`\n}\n\nconst MS_PER_DAY = 24 * 60 * 60000;\nexport const getUrlDatesForDailyProgress = () => {\n    const today = new Date(Date.now());\n    const daysTilMonday = (today.getDay() - 1) === -1 ? 6 : (today.getDay() - 1);\n    const monday = new Date(today.valueOf() - (daysTilMonday * MS_PER_DAY));\n    const urlDates = [];\n    let currentDate = monday;\n    for(let i = 0; i < 7; i++) {\n        urlDates.push(getUrlDate(currentDate));\n        currentDate = new Date(currentDate.valueOf() + MS_PER_DAY);\n    }\n\n    return urlDates;\n}\n\nexport const getUrlDatesForWeeklyProgress = () => {\n    const today = new Date(Date.now());\n    const urlDates = [];\n    for(let i = 0; i < 4; i++) {\n        urlDates.push(getUrlDate(new Date(today.valueOf() - 7 * MS_PER_DAY * i)));\n    }\n    return urlDates;\n}\n\nexport const getUrlDateForMonthlyProgress = () => {\n    const today = new Date(Date.now());\n    return getUrlDate(today);\n}\n\nexport const getWeekNumbersForWeeklyProgress = () => {\n    // @ts-ignore\n    const todayWeekNumber = DateTime.now().weekNumber;\n    let urlDates = [];\n    for(let i = 0; i < 4; i++) {\n        urlDates.push(todayWeekNumber - i);\n    }\n    urlDates = urlDates.reverse();\n    return urlDates;\n}\n\nexport const getUrlIndexFromDay = (day: number) => {\n    return day - 1 === -1 ? 6 : day - 1;\n}","import axios from 'axios';\n\nexport const client = axios.create({\n    // Docker\n    baseURL: 'https://api.habitify.me/',\n    timeout: 10000,\n    headers: {\n        Authorization: localStorage.getItem('habitify_token') ? JSON.parse(localStorage.getItem('habitify_token') as string) : \"\"\n    }\n});\n\nexport const setAuthHeader = (token: any) => {\n    client.interceptors.request.use((config: any) => {\n        config.headers.Authorization = token;\n    });\n};","import { FunctionComponent, useCallback, useEffect, useState } from \"react\"\nimport { Card } from \"../common/card\"\nimport \"../../styles/habitify.scss\";\nimport { LinearProgress, CircularProgress, ThemeProvider, Input } from \"@material-ui/core\";\nimport { materialUITheme } from \"../common/materialUITheme\";\nimport { DAYS_SHORTHAND, MONTH_SHORTHAND } from \"../../constants\";\nimport { getUrlDateForMonthlyProgress, getUrlDatesForDailyProgress, getUrlDatesForWeeklyProgress, getUrlIndexFromDay, getWeekNumbersForWeeklyProgress } from \"../../util/date\";\nimport { client, setAuthHeader } from \"../../data/axios\";\n\nfunction useLocalStorageState<T>(\n    key: string,\n    defaultValue: T\n  ): [T, (newVal: T) => void] {\n    /*\n    Similar to useState, except the state is updated to local storage so that it's not lost between refreshes.\n     */\n    // @ts-ignore\n    const storedValue = JSON.parse(localStorage.getItem(key));\n    const setVal = (v: T) => {\n      localStorage.setItem(key, JSON.stringify(v));\n        _setVal(v);\n    };\n    const [val, _setVal] = useState<T>(storedValue ?? defaultValue);\n\n    return [val, setVal];\n  }\n\nexport const HabitifyWidget: FunctionComponent = () => {\n    const [dailyProgress, setDailyProgress] = useState<number[]>([0, 0, 0, 0, 0, 0, 0]);\n    const [weeklyProgress, setWeeklyProgress] = useState<number[]>([0, 0, 0, 0]);\n    const [monthlyProgress, setMonthlyProgress] = useState<number>(0);\n    const [token, setToken] = useLocalStorageState<string>('habitify_token', '');\n    const [failedRequest, setFailedRequest] = useState<boolean>(false);\n\n    const today = new Date();\n\n    const fetchDailyProgress = useCallback(() => {\n        let dailyProgressHolder = [0, 0, 0, 0, 0, 0, 0];\n        Promise.allSettled(getUrlDatesForDailyProgress().map((date) => client.get(getJournalUrl(date))))\n        .then((responses) => {\n            responses.forEach((response: any) => {\n                if(response.status.toString() === 'fulfilled') {\n                    const value = parseResponse(response.value, \"daily\")\n                    const requestUrl: string = response.value.request.responseURL;\n                    \n                    dailyProgressHolder[getUrlIndexFromDay(new Date(requestUrl.substring(44, 54)).getDay())] = value;\n                } else {\n                    setFailedRequest(true);\n                }\n                \n            })\n            setDailyProgress(dailyProgressHolder);\n        })\n        .catch((error) => console.error(error));\n    }, []);\n\n    const fetchWeeklyProgress = useCallback(() => {\n        let weeklyProgressHolder = [0, 0, 0, 0];\n        Promise.allSettled(getUrlDatesForWeeklyProgress().map((date) => client.get(getJournalUrl(date))))\n        .then((responses) => {\n            responses.forEach((response: any) => {\n                if(response.status.toString() === 'fulfilled') {\n                    const value = parseResponse(response.value, \"weekly\")\n                    const requestUrl: string = response.value.request.responseURL;\n                    \n                    weeklyProgressHolder[getUrlIndexFromDay(new Date(requestUrl.substring(44, 54)).getDay())] = value;\n                } else {\n                    setFailedRequest(true);\n                }\n                \n            })\n            setWeeklyProgress(weeklyProgressHolder);\n        })\n        .catch((error) => console.error(error));\n    }, []);\n\n    const fetchMonthlyProgress = useCallback(() => {\n        client.get(getJournalUrl(getUrlDateForMonthlyProgress()))\n        .then((response) => {\n            const value = parseResponse(response, \"monthly\")\n            setMonthlyProgress(value);\n        })\n        .catch((error) => console.error(error));\n    }, []);\n\n    useEffect(() => {\n        setAuthHeader(token);\n        fetchDailyProgress();\n        fetchWeeklyProgress();\n        fetchMonthlyProgress();\n    }, [token, fetchDailyProgress, fetchWeeklyProgress, fetchMonthlyProgress]);\n\n    const getJournalUrl = (urlDate: string) => `journal?target_date=${urlDate}`;\n\n    const parseResponse: any = (response: any, fetch_type: string) => {\n        if(response.data.message === \"Success\") {\n            let dailyComplete = 0;\n            let dailyGoal = 0;\n            response.data.data.forEach((habit: any) => {\n                const periodicity = habit.goal.periodicity;\n                const complete = Number.parseFloat(habit.progress.current_value);\n                const goal = Number.parseFloat(habit.progress.target_value);\n                switch(periodicity){\n                    case fetch_type:\n                        dailyComplete += (complete > goal ? goal : complete);\n                        dailyGoal += goal;\n                }\n            })\n            return ((dailyComplete / dailyGoal) * 100);\n        } else {\n            return 0;\n        }\n    }\n\n    const renderDay = (index: number, progress: number) => (\n        <Card className={getUrlIndexFromDay(today.getDay()) === index ? \"current\" : \"\"}>\n            <h3 className=\"habitify__label\">\n                {DAYS_SHORTHAND[index]}\n            </h3>\n            <span className=\"habitify__day\">\n                <p className=\"habitify__day--progress\">\n                    {progress.toFixed(1)}%\n                </p>\n                <span className=\"habitify__day--wheel\">\n                    <CircularProgress \n                        variant=\"determinate\" \n                        value={progress} \n                        thickness={6}\n                        size={\"100px\"}\n                    />\n                </span>\n            </span>\n        </Card>\n    );\n\n    const renderWeek = (index: number, progress: number) => (\n        <Card className={index === 3 ? \"current\" : \"\"}>\n            <h3 className=\"habitify__label\">\n                W{getWeekNumbersForWeeklyProgress()[index]}\n            </h3>\n            <span>\n                {progress.toFixed(1)}%\n            </span>\n            <LinearProgress variant=\"determinate\" value={progress} />\n        </Card>\n    )\n\n    const renderMonth = () => (\n        <Card className=\"current\">\n            <h3 className=\"habitify__label\">\n                {MONTH_SHORTHAND[today.getMonth()]}\n            </h3>\n            <span>\n                {monthlyProgress.toFixed(1)}%\n            </span>\n            <LinearProgress variant=\"determinate\" value={monthlyProgress} />\n        </Card>\n    )\n\n    return (\n        <ThemeProvider theme={materialUITheme}>\n            <h1 className=\"habitify__title\">\n                Habitify Habit Visualizer\n            </h1>\n            <div className=\"habitify__token\">\n                <Card>\n                    { failedRequest ? (<p>failure</p>) : null}\n                    <Input onChange={(change) => setToken(change.target.value)} value={token} />\n                </Card>\n            </div>\n            <div className=\"habitify\">\n                <div className=\"habitify__row\">\n                    {\n                        DAYS_SHORTHAND.map((day, index) => (\n                            renderDay(index, dailyProgress[index])\n                        ))\n                    }\n                </div>\n                <div className=\"habitify__row\">\n                    {\n                        weeklyProgress.map((progress, index) => (\n                            renderWeek(index, progress)\n                        ))\n                    }\n                </div>\n                <div className=\"habitify__row\">\n                    {renderMonth()}\n                </div>\n            </div>\n        </ThemeProvider>\n    )\n}","import './styles/App.scss';\nimport { HabitifyWidget } from './components/widgets/habitify';\n\nfunction App() {\n  return (\n    <div className=\"dash\">\n      <HabitifyWidget />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}